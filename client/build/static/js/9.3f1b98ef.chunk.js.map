{"version":3,"sources":["views/project/project-create/ProjectCreate.tsx","axios/config.ts","components/spots/index.tsx","services/project.ts"],"names":["__webpack_exports__","antd_es_form__WEBPACK_IMPORTED_MODULE_3__","create","props","handleSubmit","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee2","e","wrap","_context2","prev","next","preventDefault","form","validateFields","_ref2","_callee","err","fieldsValue","baseUrl","desc","name","target","param","_context","concat","proxy","projectCreate","sent","antd_es_message__WEBPACK_IMPORTED_MODULE_7__","success","history","push","t0","stop","_x2","_x3","apply","this","arguments","_x","getFieldDecorator","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","className","components_spots__WEBPACK_IMPORTED_MODULE_9__","_extends","layout","onSubmit","Item","label","rules","required","message","pattern","antd_es_input__WEBPACK_IMPORTED_MODULE_5__","maxLength","placeholder","addonBefore","antd_es_button__WEBPACK_IMPORTED_MODULE_1__","type","htmlType","codeMessage","200","201","202","204","400","401","403","404","405","406","410","422","500","502","503","504","instance","axios","baseURL","timeout","headers","Content-Type","interceptors","request","use","config","error","Promise","reject","response","data","code","msg","antd_es_message__WEBPACK_IMPORTED_MODULE_3__","warning","status","antd_es_notification__WEBPACK_IMPORTED_MODULE_1__","placement","duration","description","path","newUrl","url","method","Object","keys","map","v","k","encodeURIComponent","paramStr","join","curConfig","_objectSpread","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Spots","getRandomColor","r","Math","floor","random","g","b","getRandomTop","getRandomMargin","SpotsContent","useMemo","sArr","i","Fragment","radius","key","style","background","width","height","marginTop","marginLeft","top","left","params","res","abrupt","getProjectList","queryProject","_ref3","_callee3","_context3","updateProject","_ref4","_callee4","_context4","deleteProject","_ref5","_callee5","_context5","_x4"],"mappings":"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","file":"static/js/9.3f1b98ef.chunk.js","sourcesContent":["/* eslint-disable import/extensions */\n/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport Spots from 'components/spots';\nimport { Project } from 'typings/project';\nimport { projectCreate } from '../../../services/project';\nimport './index.less';\n\ninterface FormProps extends FormComponentProps {\n  [propName: string]: any; // 要传进来的属性\n}\n\nfunction ProjectCreate(props: any) {\n  const formItemLayout = {\n    // labelCol: {\n    //   xs: { span: 2 },\n    //   sm: { span: 3 },\n    // },\n    // wrapperCol: {\n    //   xs: { span: 4 },\n    //   sm: { span: 6 },\n    // },\n    // colon: false,\n  };\n\n  const handleSubmit = async (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    props.form.validateFields(async (err: any, fieldsValue: any) => {\n      if (!err) {\n        console.log(fieldsValue);\n        const { baseUrl, desc, name, target } = fieldsValue;\n        const param: Partial<Project> = {\n          baseUrl: `/${baseUrl}`,\n          desc: desc || name,\n          name,\n          proxy: {\n            target: target ? `http://${target}` : '',\n          },\n        };\n        try {\n          const rs = await projectCreate(param);\n          if (rs) {\n            message.success('项目创建成功');\n            props.history.push('/');\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n  };\n\n  const { getFieldDecorator } = props.form;\n\n  return (\n    <div className=\"project-create\">\n      <div className=\"project-create-header\">\n        <Spots />\n        <div className=\"header-info\">\n          <h2>创建项目</h2>\n          <p>快来创建一个令人愉快的项目吧～</p>\n        </div>\n      </div>\n      <div className=\"project-create-content\">\n        <Form\n          layout=\"vertical\"\n          onSubmit={handleSubmit}\n          {...formItemLayout}\n          className=\"project-create-form\"\n        >\n          <Form.Item label=\"项目名称\">\n            {getFieldDecorator('name', {\n              rules: [\n                {\n                  required: true,\n                  message: '名称不能为空',\n                },\n                {\n                  pattern: /^[\\u4e00-\\u9fa5a-zA-Z0-9\\-_.]{0,30}$/,\n                  message:\n                    '仅支持汉字、英文字母、数字、下划线(_)、连字符(-)、点(.)',\n                },\n              ],\n            })(<Input maxLength={30} placeholder=\"project\" />)}\n          </Form.Item>\n          <Form.Item label=\"项目基础URL\">\n            {getFieldDecorator('baseUrl', {\n              rules: [\n                {\n                  required: true,\n                  message: '基础URL不能为空',\n                },\n                {\n                  pattern: /^[a-zA-Z]*$/,\n                  message: '格式为大小写英文字母',\n                },\n              ],\n            })(<Input addonBefore=\"/\" maxLength={30} placeholder=\"example\" />)}\n          </Form.Item>\n          <Form.Item label=\"项目代理URL\">\n            {getFieldDecorator('target', {\n              rules: [\n                {\n                  pattern: /^((https?:\\/\\/)?(([a-zA-Z0-9]+-?)+[a-zA-Z0-9]+\\.)+[a-zA-Z]+)(:\\d+)?(\\/.*)?(\\?.*)?(#.*)?$/,\n                  message: '格式不正确',\n                },\n              ],\n            })(\n              <Input\n                addonBefore=\"http://\"\n                maxLength={255}\n                placeholder=\"www.abc.com\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item label=\"项目描述\">\n            {getFieldDecorator('desc')(\n              <Input maxLength={255} placeholder=\"不填默认为项目名\" />\n            )}\n          </Form.Item>\n          <Form.Item className=\"ta-c\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              创建\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default Form.create<FormProps>({})(ProjectCreate);\n","import axios, { AxiosRequestConfig } from 'axios';\nimport { message, notification } from 'antd';\n\ntype Response<T> = {\n  [P in keyof T]: T[P];\n} & { code: number | string };\n\n// HTTP code码\nconst codeMessage: { [key: string]: string } = {\n  200: '服务器成功返回请求的数据。',\n  201: '无数据',\n  202: '一个请求已经进入后台排队（异步任务）。',\n  204: '删除数据成功。',\n  400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n  401: '用户没有权限（令牌、用户名、密码错误）。',\n  403: '用户没有访问权限',\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n  405: '方法不被允许',\n  406: '请求的格式不可得。',\n  410: '请求的资源被永久删除，且不会再得到的。',\n  422: '当创建一个对象时，发生一个验证错误。',\n  500: '服务器发生错误，请检查服务器。',\n  502: '网关错误。',\n  503: '服务不可用，服务器暂时过载或维护。',\n  504: '网关超时。',\n};\n\nconst getBaseUrl = () => {\n  if (process.env.NODE_ENV === 'development') {\n    // 如果在开发环境的时候可以用于本地联调\n    // return 'http://localhost:1988';\n  }\n  return '';\n};\n\n// 新创建一个axios实例，并进行基础配置\nconst instance = axios.create({\n  baseURL: getBaseUrl(),\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n    // \"Content-Type\":\"application/x-www-form-urlencoded;charset=utf-8\"\n  },\n});\n\n// 添加请求拦截器\ninstance.interceptors.request.use(\n  config => {\n    // 再次设置token或者添加loading等请求前的操作\n    // 添加一个loading\n    // store.dispatch(actions.showLoading(true));\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// 添加xi响应拦截器\ninstance.interceptors.response.use(\n  response => {\n    // 响应数据后做点什么\n    // 添加一个loading\n    // store.dispatch(actions.showLoading(false));\n    // 存在业务异常 抛出给业务代码去捕获\n    const { data } = response;\n    if (data.code != 200) {\n      const msg = data.msg || data.message || '';\n      message.warning(msg);\n      return Promise.reject(data);\n    }\n    // 不存在业务异常返回数据\n    return data;\n  },\n  error => {\n    if (error && error.response) {\n      const { status } = error.response;\n      console.warn(\n        `http error: status-${status} message-${codeMessage[status]}`\n      );\n\n      if (codeMessage[status] !== null || undefined) {\n        notification.warning({\n          placement: 'topRight',\n          duration: 2,\n          message: '提示',\n          description: `接口：${error.response.data.path}，${error.response.data.message}`,\n        });\n      } else {\n        notification.warning({\n          placement: 'topRight',\n          duration: 2,\n          message: '提示',\n          description: error,\n        });\n      }\n    }\n    return Promise.reject(error); // 非业务异常无需抛出错误 内部吞掉\n  }\n);\n\n/**\n * get请求\n * @method get\n * @param {url, params, loading} 请求地址，请求参数，是否需要加载层\n */\nconst get = (url: string, params: any) => {\n  return new Promise((resolve, reject) => {\n    // {\n    //   params: params\n    // }\n    instance\n      .get(url, params)\n      .then(res => {\n        resolve(res);\n      })\n      ['catch'](err => {\n        reject(err);\n      });\n  });\n};\n/**\n * post请求\n * @method post\n * @param {url, params} 请求地址，请求参数，是否需要加载层\n */\nconst post = (url: string, data: any) => {\n  return new Promise((resolve, reject) => {\n    // qs.stringify(data)\n    instance\n      .post(url, data)\n      .then(res => {\n        console.log(res);\n        resolve(res);\n      })\n      ['catch'](err => {\n        reject(err);\n      });\n  });\n};\n\nfunction request<T>(config: AxiosRequestConfig): Promise<Response<T>> | null {\n  let newUrl = config.url;\n  if (\n    (config.method === 'GET' ||\n      config.method === 'DELETE' ||\n      config.method === 'PUT') &&\n    config.data\n  ) {\n    const param: string[] = [];\n    Object.keys(config.data).map((v: string, k: number) => {\n      param.push(`${v}=${encodeURIComponent(config.data[v])}`);\n    });\n    const paramStr = param.join('&');\n    newUrl = `${newUrl}?${paramStr}`;\n  }\n  const curConfig = { ...config, url: newUrl };\n  return (instance.request<Response<T>>(curConfig) as any) as Promise<\n    Response<T>\n  >;\n}\nexport { get, post, request, Response };\n","import React, { useMemo } from 'react';\nimport './index.less';\n\nfunction Spots(props: any) {\n  const NUM = 10;\n  const getRandomColor = () => {\n    const r = Math.floor(Math.random() * 100) + 155;\n    const g = Math.floor(Math.random() * 100) + 115;\n    const b = Math.floor(Math.random() * 100) + 115;\n    return `rgb(${r},${g},${b})`;\n  };\n  const getRandomWidth = () => {\n    return Math.floor(Math.random() * 60);\n  };\n  const getRandomTop = () => {\n    return `${Math.floor(Math.random() * 100)}%`;\n  };\n  const getRandomMargin = () => {\n    return `-${Math.floor(Math.random() * 60)}px`;\n  };\n\n  const SpotsContent = useMemo(() => {\n    const sArr: number[] = [];\n    for (let i = 0; i < NUM; i++) {\n      sArr.push(i);\n    }\n    return (\n      <>\n        {sArr.map(k => {\n          const radius = getRandomWidth();\n          return (\n            <span\n              key={k}\n              className=\"decorate\"\n              style={{\n                background: getRandomColor(),\n                width: radius,\n                height: radius,\n                marginTop: getRandomMargin(),\n                marginLeft: getRandomMargin(),\n                top: getRandomTop(),\n                left: getRandomTop(),\n              }}\n            />\n          );\n        })}\n      </>\n    );\n  }, []);\n\n  return <div className=\"spots\">{SpotsContent}</div>;\n}\n\nexport default Spots;\n","import { request, Response } from '../axios/config';\nimport { Project } from '../typings/project';\n\ninterface RequestResponse {\n  code: number;\n  message: string;\n  success: boolean;\n  data: any;\n}\n// 项目创建\nexport const projectCreate = async (params: Partial<Project>) => {\n  const res = await request<Response<RequestResponse>>({\n    url: '/project/create',\n    method: 'POST',\n    data: params,\n  });\n  return res && res.data;\n};\n\n// 获取项目列表\nexport const getProjectList = async () => {\n  const res = await request<Response<RequestResponse>>({\n    url: '/project/list',\n    method: 'GET',\n  });\n  return res && res.data;\n};\n\n// 查询项目\nexport const queryProject = async (params: { projectId: string }) => {\n  const res = await request<Response<RequestResponse>>({\n    url: '/project/query',\n    method: 'GET',\n    data: params,\n  });\n  return res && res.data;\n};\n\n// 编辑项目 /project/update\nexport const updateProject = async (params: Partial<Project>) => {\n  const res = await request<Response<RequestResponse>>({\n    url: '/project/update',\n    method: 'POST',\n    data: params,\n  });\n  return res && res.data;\n};\n\n// 删除项目\nexport const deleteProject = async (params: { projectId: string }) => {\n  const res = await request<Response<RequestResponse>>({\n    url: '/project/delete',\n    method: 'DELETE',\n    data: params,\n  });\n  return res && res.data;\n};\n"],"sourceRoot":""}